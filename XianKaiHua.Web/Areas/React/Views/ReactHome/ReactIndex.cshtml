@{
}
<html>
<head>

    <!-- Load our React component. -->
    @*<script src="like_button.js"></script>*@
    <style>
        body {
            font: 14px "Century Gothic", Futura, sans-serif;
            margin: 20px;
        }

        ol, ul {
            padding-left: 30px;
        }

        .board-row:after {
            clear: both;
            content: "";
            display: table;
        }

        .status {
            margin-bottom: 10px;
        }

        .square {
            background: #fff;
            border: 1px solid #999;
            float: left;
            font-size: 24px;
            font-weight: bold;
            line-height: 34px;
            height: 34px;
            margin-right: -1px;
            margin-top: -1px;
            padding: 0;
            text-align: center;
            width: 34px;
        }

            .square:focus {
                outline: none;
            }

        .kbd-navigation .square:focus {
            background: #ddd;
        }

        .game {
            display: flex;
            flex-direction: row;
        }

        .game-info {
            margin-left: 20px;
        }
    </style>
</head>
<body>
    <div id="errors" style="background: #c00;color: #fff;display: none;margin: -20px -20px 20px;padding: 20px;white-space: pre-wrap;"></div>
    <div id="root"></div>
    <div id="like_button_container"></div>
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script>
        'use strict';

        const e = React.createElement;

        class LikeButton extends React.Component {
            constructor(props) {
                super(props);
                this.state = { liked: false };
            }

            render() {
                if (this.state.liked) {
                    return 'You liked this.';
                }

                return e(
                    <button onClick={() => this.setState({ liked: true })}>
                        Like
                    </button>


                //    'button',
                //    { onClick: () => this.setState({ liked: true }) },
                //    'Like'
                );
            }
        }

        const domContainer = document.querySelector('#like_button_container');
        ReactDOM.render(e(LikeButton), domContainer);

        //const React = React.createElement;

        //// 显示一个 "Like" <button>
        //return React(
        //    'button',
        //    { onClick: () => this.setState({ liked: true }) },
        //    'Like'
        //);

/*
            class Square extends React.Component {
                // TODO: remove the constructor
                constructor(props) {
                    super(props);
                    this.state = {
                        value: null,
                    };
                }

                render() {
                    // TODO: use onClick={this.props.onClick}
                    // TODO: replace this.state.value with this.props.value
                    return (
                        <button className="square" onClick={() => this.setState({ value: 'X' })}>
                            {this.state.value}
                        </button>
                    );
                }
            }

            class Board extends React.Component {
                constructor(props) {
                    super(props);
                    this.state = {
                        squares: Array(9).fill(null),
                    };
                }

                renderSquare(i) {
                    return <Square value={this.state.squares[i]} />;
                }

                render() {
                    const status = 'Next player: X';

                    return (
                        <div>
                            <div className="status">{status}</div>
                            <div className="board-row">
                                {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}
                            </div>
                            <div className="board-row">
                                {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}
                            </div>
                            <div className="board-row">
                                {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}
                            </div>
                        </div>
                    );
                }
            }

            class Game extends React.Component {
                render() {
                    return (
                        <div className="game">
                            <div className="game-board">
                                <Board />
                            </div>
                            <div className="game-info">
                                <div>{// status
                                }
                                </div>
                                    <ol>{//TODO
                                    }</ol>
                            </div>
                        </div>
                    );
                }
            }

            // ========================================

            ReactDOM.render(
                <Game />,
                document.getElementById('root')
            );

          /*  */
    </script>

    @*<script type="text/javascript">
            window.addEventListener('mousedown', function (e) {
                document.body.classList.add('mouse-navigation');
                document.body.classList.remove('kbd-navigation');
            });
            window.addEventListener('keydown', function (e) {
                if (e.keyCode === 9) {
                    document.body.classList.add('kbd-navigation');
                    document.body.classList.remove('mouse-navigation');
                }
            });
            window.addEventListener('click', function (e) {
                if (e.target.tagName === 'A' && e.target.getAttribute('href') === '#') {
                    e.preventDefault();
                }
            });
            window.onerror = function (message, source, line, col, error) {
                var text = error ? error.stack || error : message + ' (at ' + source + ':' + line + ':' + col + ')';
                errors.textContent += text + '\n';
                errors.style.display = '';
            };
            console.error = (function (old) {
                return function error() {
                    errors.textContent += Array.prototype.slice.call(arguments).join(' ') + '\n';
                    errors.style.display = '';
                    old.apply(this, arguments);
                }
            })(console.error);
        </script>*@
</body>
</html>
